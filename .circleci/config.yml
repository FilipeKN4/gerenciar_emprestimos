version: 2.1

jobs:
  test-and-lint:
    working_directory: ~/loan_manager
    docker:
      - image: cimg/python:3.9.6  # Defina a versão do Python
      - image: cimg/postgres:14.1  # Define a versão do Postgres
        environment:
          # Se certificar do HOST do banco estar configurado como 'localhost'
          POSTGRES_USER: postgres
    steps:
      # Busca o código fonte do seu repositório por SSH na pasta indicada
      - checkout
      # Restaura um cache previamente salvo
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "./loan_manager/requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r ./loan_manager/requirements.txt
       # Salva um cache das dependências do projeto obtidas após rodar o 'pip install'
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "./loan_manager/requirements.txt" }}
          paths:
            - venv
      # Executa teste de linting
      - run:
          name: Test Lint
          command: |
            . venv/bin/activate
            pylint --rcfile=./loan_manager/pylintrc --fail-under=8.0 ./loan_manager/account ./loan_manager/transactions
      # Executa testes unitários
      - run:
          name: Run Django Tests
          command: |
            . venv/bin/activate
            python3 loan_manager/manage.py test loan_manager --keep
      # Salva logs, binários e outros para serem acessados pelo apps em futuras execuções
      - store_artifacts:
          path: test-reports/
          destination: loan_manager_app

  build-and-push-to-dockerhub:
    docker:
      - image: cimg/base:2024.02  # Defina a versão do Python
    steps:
      # Busca o código fonte do seu repositório por SSH na pasta indicada
      - checkout
      - setup_remote_docker
      # Realiza o build, login e push da imagem gerada para o Docker Hub
      - run:
          name: Build and push to Docker Hub
          command: |
            docker build -t $DOCKER_HUB_USER_ID/$IMAGE_NAME:latest ./loan_manager
            echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER_ID" --password-stdin
            docker push $DOCKER_HUB_USER_ID/$IMAGE_NAME:latest

workflows:
  version: 2
  build-main:
    jobs:
      - test-and-lint
      - build-and-push-to-dockerhub:
          requires:
            - test-and-lint
